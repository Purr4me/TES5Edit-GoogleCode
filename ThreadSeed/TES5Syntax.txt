[size="5"][b][color="#00BFFF"]Record Syntax:[/color][/size][/b]

[color="#FF8C00"][size="3"][b]wbByteArray:[/color][/size][/b][quote]Will cpNormal or cpTranslate make it display the two bytes in the following command:
[code]wbByteArray('Unused', 2),[/code]How do I force it to display the 2 bytes?

Either call it something other than “Unused” or change:
[code]  wbHideUnused : Boolean{} = True;{}[/code]
in wbInterface.pas to
[code]  wbHideUnused : Boolean{ = True;{}[/code]Is there an easy way to make wbUnknown output Hex and Ascii with xDump in two columns, ending up saved in the text file?

Not in two lines, but you can change TwbByteArrayDef.ToString to output hex followed by text or whatever you want.[/quote][color="#FF8C00"][size="3"][b]wbInteger for a Single Flag:[/b][/size][/color]
[quote][code]FNAM - 00 00 00 00
FNAM - 01 00 00 00[/code]

There is no need to make it a wbStruct if it’s only a single field. There are overloaded versions of wbInteger, wbFloat and so on that can take a record signature as first parameter. You can use these if a subrecord (aka chunk) only contains a single field.

[code]      wbInteger(FNAM, 'Flags', itU32, wbFlags([
        'Playable'
      ])),[/code]

What’s happening here is that this version of wbInteger takes a IwbIntegerDefFormater as 4th parameter.

wbFlags returns a IwbIntegerDefFormater. There is also wbEnum, wbFormID and others.  The underlying field for all of these is always an integer of some specified size. The formatter sits on top and controls how the field is presented for editing/viewing.[/quote]
[color="#FF8C00"][size="3"][b]wbUnknown:[/b][/size][/color][quote]Original Output:[code]    Model
      MODL - Model Filename: 1AAxe01\1stPersonAxe.nif
      MODT - Texture Files Hashes: 02 00 00 00 00 00 00 00 00 00 00 00
      DNAM
GRUP Top "WEAP"[/code]

[code]wbUnknown(DNAM);[/code]

Using wbUnknown:[code]    Model
      MODL - Model Filename: 1AAxe01\1stPersonAxe.nif
      MODT - Texture Files Hashes: 02 00 00 00 00 00 00 00 00 00 00 00
      DNAM - Unknown: 00 00 B4 42 00 00 00 00
GRUP Top "WEAP"[/code]

wbUnknow returns the actuall data contained in that field to be further analysed.
[/quote][color="#FF8C00"][size="3"][b]wbFlags:[/b][/size][/color][quote]Individual bits each represent a Boolean switch.
[code]  wbRecordFlags := wbInteger('Record Flags', itU32, wbFlags([
    {0x00000001}'ESM',
    {0x00000002}'',
    {0x00000004}'',
    {0x00000008}'',
    {0x00000010}'',
    {0x00000020}'Deleted',
    {0x00000040}'Border Region / Has Tree LOD / Constant / Hidden From Local Map',
    {0x00000080}'Turn Off Fire',
    {0x00000100}'Inaccessible',
    {0x00000200}'Casts shadows / On Local Map / Motion Blur',
    {0x00000400}'Quest item / Persistent reference',
    {0x00000800}'Initially disabled',
    {0x00001000}'Ignored',
    {0x00002000}'No Voice Filter',
    {0x00004000}'',
    {0x00008000}'Visible when distant',
    {0x00010000}'Random Anim Start / High Priority LOD',
    {0x00020000}'Dangerous / Off limits (Interior cell) / Radio Station (Talking Activator)',
    {0x00040000}'Compressed',
    {0x00080000}'Can''t wait / Platform Specific Texture',
    {0x00100000}'Unknown 21',
    {0x00200000}'Unknown 22',
    {0x00400000}'Unknown 23',
    {0x00800000}'Unknown 24',
    {0x01000000}'Unknown 25',
    {0x02000000}'Obstacle / No AI Acquire',
    {0x03000000}'NavMesh Generation - Filter',
    {0x08000000}'NavMesh Generation - Bounding Box',
    {0x10000000}'Non-Pipboy / Reflected by Auto Water',
    {0x20000000}'Child Can Use / Refracted by Auto Water',
    {0x40000000}'NavMesh Generation - Ground',
    {0x80000000}'Unknown 32'
  ]));[/code]

The byte sequence 01 00 00 00, if seen as a 32bit unsigned integer of 0x00000001[/quote]

[size="5"][b][color="#00BFFF"]Special Record Structures:[/color][/size][/b]

[color="#FF8C00"][size="3"][b]wbFULL and weird chars:[/b][/size][/color][quote]Reference: WEAP - Weapon [000139A4] <GlassBattleaxe> "¥×"

Everyone thinks those two chars are localization chars but I can't figure out the LVLI routine yet.

I think that instead of strings they are now storing ID numbers or something like that which are used as lookup into some other file that contains the actual strings. To properly support that will require more than just fiddling with the record definitions.

I think I'm gonna do the WEAP rec next to see if I can get those chars to go away.

I assume these chars come from the FULL subrecords which are supposed to contain the name of objects. Once the handling of the FULL subrecords is fixed, the proper names will show up everywhere.

Yeah there are three for any plugin with localization.  These are for Update and there are three skyrim.  99% of the time there isn't a strings file for a plugin made with the CK.  People are making programs to make them for now.

Update_English.DLSTRINGS
Update_English.ILSTRINGS
Update_English.STRINGS

So you think if I were to update the FULL subroutine to look at these external files, then that might be the way to get the string?

Yes, I think someone will have to reverse engineer the file format for these files, write some code to load them into memory (probably attached to TwbFile) and code lookup strings based on IDs, and then change TwbStringDef.ToString to lookup the string via ID or add a totally new TwbStringRefDef or something like that. That’s for TES5Dump. For TES5Edit things get more complicated because code will need to be in place for also saving modified string files.[/quote]
[color="#FF8C00"][size="3"][b]GMST:[/b][/size][/color][quote]You can’t create new game settings, only change existing ones.
In FNV and older, the first character of the editor ID defined what type the game setting is.

If you look at the record definition for FNV:
[code]  wbRecord(GMST, 'Game Setting', [
    wbString(EDID, 'Editor ID', 0, cpCritical, True, nil, wbGMSTEDIDAfterSet),
   wbUnion(DATA, 'Value', wbGMSTUnionDecider, [
      wbString('', 0, cpTranslate),
      wbInteger('', itS32),
      wbFloat('')
    ], cpNormal, True)
  ]);[/code]

You can see that the DATA field can be either a string, an integer, or a Float.

If you look at the source of wbGMSTUnionDecider, which is the function that is being called to decide which of the 3 different choices to instantiate for each element:
[code]function wbGMSTUnionDecider(aBasePtr: Pointer; aEndPtr: Pointer; const aElement: IwbElement): Integer;
var
  rEDID: IwbRecord;
  s: string;
begin
  Result := 1;
  rEDID := aElement.Container.RecordBySignature[EDID];
  if Assigned(rEDID) then begin
    s := rEDID.Value;
    if Length(s) > 0 then
      case s[1] of
        's': Result := 0;
        'f': Result := 2;
      end;
  end;
end;[/code]

You can see that it gets hold of the EDID subrecord (EditorID) and looks at the first character, s for string, f for float, everything else (i) is treated as integer.

When I started working on TES5Dump, one of the first things I noticed is that string game settings no longer seemed to contain strings. So I changed the record definition:
[code]
  wbRecord(GMST, 'Game Setting', [
    wbString(EDID, 'Editor ID', 0, cpCritical, True, nil, wbGMSTEDIDAfterSet),
    wbUnion(DATA, 'Value', wbGMSTUnionDecider, [
      wbUnknown,
      wbInteger('', itS32),
      wbFloat('')
    ], cpNormal, True)
  ]);[/code]

wbUnknown replaced wbString. wbUnknown is shorthand for a variable length wbByteArray with name “Unknown”.[/quote]

[size="5"][b][color="#00BFFF"]Execution Tips:[/color][/size][/b]

I recommend making a batch file in your Data folder:[code]copy "C:\Users\Daddyo\Desktop\TES5Edit\TES5Dump\TES5Dump.exe" "C:\Program Files\Steam\SteamApps\common\skyrim\Data\TES5Dump.exe"
TES5Dump Executor.esp > Executor.txt
pause[/code]

It will copy the TES5Dump.exe to your data folder before running it to make sure it's the newest version and will reflect any changes you have made.  The last line 'pause' forces you to press a key before the window closes.  This allows you to see any error messages before the window closes.

[size="5"][b][color="#00BFFF"]Usefuull Programs:[/color][/size][/b]

[url=http://download.cnet.com/HxD-Hex-Editor/3000-2352_4-10891068.html]HxD Hex Editor[/url]