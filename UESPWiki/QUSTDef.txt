<noinclude>{{Trail|File Formats|Mod File Format}}</noinclude>
'''QUST''' records describe Quests. The overall QUST record has a complex structure, with most fields repeating multiple times.  The order in which the fields appear provides important information about each invidual field.  Fields of particular importance are:
* '''[[#INDX Section|INDX]]''' fields.  Each one marks the start of information about a given quest stage.  The subsequent fields all provide information about that specific quest stage.
* '''[[#QOBJ Section|QOBJ]]''' fields.  Each one marks the start of information about a given quest objective.
* [[#ALST/ALLS Section|'''ALST''' and '''ALLS''']] fields: Each one marks the start of information about a given quest alias. Aliases have an ID (e.g., 4), a name (e.g., <code>Location</code>), and a calculated value, e.g., "Winterhold". ALLS fields are used for location aliases, whereas ALST fields are used for reference aliases.  

== Standard Fields ==
These fields are not part of any of the more complex structures described in the subsequent sections.
{| class="wikitable vtop" width="100%" 
! width="3%" | [[Tes5Mod:File Format Conventions|C]]
! width="10%" | SubRecord
! width="15%" | Name
! width="12%" | [[Tes5Mod:File Format Conventions|Type/Size]]
! | Info
|- 
| + || EDID || editorId || zstring || Editor id
|-
| - || VMAD || script info || [[Tes5Mod:Mod File Format/VMAD Field|VMAD]] || There is only VMAD field for the entire QUST record, which contains information about all of the scripts directly and indirectly attached to the quest (including stage-specific script fragments and scripts attached to the quests' aliases)
|-
| - || FULL || Quest Name || lstring || Full name as displayed in journal (at least for non-miscellaneous quests)
|-{{ThickLine}}
| rowspan = 7 | + || rowspan=7 | DNAM || Quest Data || struct[12] ||
|-
|
:Flags
| uint8 ||
:0x01 = Start Game Enabled
:0x02 ''Unused''
:0x04 ''Used but not shown in CK''
:0x08 = Allow repeated stages
:0x10 ''Used but not shown in CK''
|-
|
:Flags
| uint8 ||
:0x01 = Run Once 
:0x02 = Exclude from dialogue export
:0x04 = Warn on alias fill failure
:0x08 ''Unused''
:0x10 ''Used but not shown in CK''
|-
|
:Priority
| uint8 || Value from 0 to 100
|-
|
:''Unknown''
| uint8 || Possibly just filler (Observed values are 0, 25, 101, 108, 111, and 204. Only 0 and 204 seen more than once)
|-
|
:''Unknown''
| int32 || Always zero
|-
|
:Quest Type
| uint32 || Possible Values:
:0 = None ''(Quest does not appear in quest log)''
:1 = Main Quest
:2 = Mages' Guild
:3 = Thieves' Guild
:4 = Dark Brotherhood
:5 = Companion Quests
:6 = Miscellaneous ''(Quest appears in Miscellaneous section of quest log; quest name is hidden and only quest objectives are shown to player)''
:7 = Daedric Quests
:8 = Side Quests
:9 = Civil War
|- {{ThickLine}}
| - || ENAM || Event || char[4] || Corresponds with [[Tes5Mod:Mod File Format/SMEN|SMEN]] short name
|-
| + || FLTR || Object Window Filter || zstring || Values like 'Main Quest\', 'Civil War\', 'Civil War\Siege\', 'Faction\ThievesGuild\' and 'Faction\Companions\Radiant\'
|-
| * || [[Tes5Mod:Mod File Format/CTDA Field|CTDA]] || Quest Dialogue Conditions || struct[32] || Conditions that apply to the quest as a whole.  Note that CTDA fields also appear within the INDX, QOBJ, and ALST/ALLS sections, but the CTDA fields in those sections only apply to a smaller component of the quest.
|-
| * ||
: CIS2
|Variable name? || zstring || Auxiliary data for CTDA.
|-
| + || NEXT || Marker || empty || Always zero bytes in length so far.  Appears to mark the end of the QUST header; normally INDX records start to appear immediately after the NEXT field (although sometimes CTDA fields come after NEXT instead of before it).
|- 
| + || ANAM || AliasCount? || int32 || May be the maximum number of Aliases associated with this quest.  If so, it implies that the scripting defines more indices that are reflected in the QUST record.  (The largest AliasID is never larger than AliasCount in tested cases, but typically several AliasIDs do not appear in ALID fields).<br/>  ANAM actually appears in between the QOBJ and ALST/ALLS sections, but there is only ever one ANAM field per QUST, and the location of the field may not have any significance.
|}

== INDX Section ==
Each INDX section provides information on a specific quest stage.  Multiple INDX fields can appear in a single QUST record, and 1 or more QSDT fields can appear within each INDX field.  The multipliers in the 'C' column in the following table only apply relative to a given INDX/QSDT combination (any of these fields may appear multiple times within an overall QUST record).

Any script attached to a given quest stage is automatically turned into a script "fragment"; the quest stage fragments are all combined into an automatically-generated quest fragments script file (named "QF_<editorID>_<formID>").  The script fragments are numbered chronologically, meaning that there is no relationship between the fragment numbers and the quest stage numbers.  The only place to extract the fragment numbers is from the [[Tes5Mod:Mod File Format/VMAD Field|VMAD]] field for the overall QUST record, which contains a [[Tes5Mod:Mod File Format/VMAD Field#Fragments Section|section]] storing those numbers.

{| class="wikitable" width="100%" 
! width="3%" | [[Tes5Mod:File Format Conventions|C]]
! width="10%" | SubRecord
! width="15%" | Name
! width="12%" | [[Tes5Mod:File Format Conventions|Type/Size]]
! | Info
|-
| rowspan = 4 | * || rowspan=4 | INDX || Journal Index || struct || Journal index of the quest stage and other data
|-
| Index || int16 || Actual journal index of the quest stage
|-
| Flags || uint8 || Flag options:
: 0x02 - Start Up Stage
: 0x04 - Shut Down Stage
: 0x08 - Keep Instance Data From Here On
|-
| ''Unknown'' || int8 || Possibly filler.  Nothing shown in CK corresponds to values found here.  Values range from -110 to 127 and do not appear to be flags.
|- {{ThickLine}}
| * ||
: QSDT
| ubyte || Flags || Each QSDT field marks the start of one possible set of values for this quest stage.  Multiple QSDT fields will appear if there are multiple ways to complete this quest stage, and therefore multiple possible journal entries.<br/>QSDT contains quest stage flags
: 0x01 - Complete Quest
: 0x02 - Fail Quest
|-
| - ||
:: CNAM
| Journal entry || lstring || Index in the string file for the text of the journal entry.
|-
| ? ||
:: SCHR
| Unknown || struct[25] || Unknown
|- 
| ? ||
:: QNAM
| Quest? || formid || QUST formid, however several point to themselves (eg 0x000BA53C)
|-
| ? ||
:: SCTX
| Unknown || string || Unknown
|-
| * ||
:: [[Tes5Mod:Mod File Format/CTDA Field|CTDA]]
| Conditions || struct[32] || Conditions that apply to this QSDT.
|-
| * ||
::: CIS2
| Variable name? || zstring || Auxiliary data for CTDA.
|}

== QOBJ Section ==
Multiple QOBJ fields can appear in a single QUST record, and 1 or more QSTA fields can appear within each QOBJ field.  The multipliers in the 'C' column in the following table only apply relative to a given QOBJ/QSTA combination (any of these fields may appear multiple times within an overall QUST record)
{| class="wikitable" width="100%" 
! width="3%" | [[Tes5Mod:File Format Conventions|C]]
! width="10%" | SubRecord
! width="15%" | Name
! width="12%" | [[Tes5Mod:File Format Conventions|Type/Size]]
! | Info
|-
| * || QOBJ || Index || int16 || Quest objective index.  The following fields all provide information about this quest objective.

By convention, the quest objective index normally corresponds to a quest stage index (i.e., a value in an INDX field), in which case this quest objective is assigned to the player as part of that quest stage.  However, the relationship between quest stage index and quest objective index is merely a convention and is not enforced.  The only thing that actually controls when an objective appears is the script attached to a quest stage.  In some more complex quests, multiple objectives may be assigned as part of a single quest stage -- or the same quest objective can be assigned by multiple stages.
|-
| + ||
: FNAM
| Flags || int32 || Only flag option:
:0x01 - ORed With Previous
(Note that FNAM also appears in ALST/ALLS section, where it has other possible values)
|-
| + ||
: NNAM
| node name?  || lstring || Text for an individual quest objective
|- {{ThickLine}}
| rowspan = 3 | * || rowspan = 3 |
: QSTA
| Quest Target || struct[8] ||
|-
|
:Target Alias
| int32 || Target for this quest objective, provided as an AliasID.
|-
|
:Flags
| int32 || Flag for compass markers ignoring locks. - 0 = will not ignore, 1 = will ignore.
|- {{ThickLine}}
| * ||
:: [[Tes5Mod:Mod File Format/CTDA Field|CTDA]]
| Conditions || struct[32] || Conditions that apply to this QSTA.
|-
| * ||
::: CIS2
| Variable name? || zstring || Auxiliary data for CTDA.
|}

== ALST/ALLS Section ==
Multiple ALST and/or ALLS fields can appear in a single QUST record.  Each ALST/ALLS entry provides information about a given Alias (i.e., a dynamically assigned value) that can appear in this quest.  ALLS fields are used for location aliases, whereas ALST fields are used for reference aliases.  Some of the fields within an ALST/ALLS section are used to determine the calculated value for the alias.  Other fields are used to assign properties to the target of the alias.  For example, if the alias is an NPC, the NPC may be assigned factions, spells, or inventory items associated with the alias.

In terms of structure, ALST and ALLS fields are largely interchangeable. The primary entry within an ALST/ALLS section is the ALID field, which provides the alias name.  Multiple ALID fields are possible within a given ALST/ALLS section.  Under the ALID field are a wide variety of possible fields.  Many fields can appear in either ALST or ALLS sections, whereas others are specific to one section.  The multipliers in the 'C' column in the following table only apply relative to a given ALST/ALLS/ALID combination (any of these fields may appear multiple times within an overall QUST record).

In addition to the various packages, factions, spells, inventory items, etc. listed below, any aliased object can also have scripts attached to it when it is assigned to the alias.  However, those scripts are not listed in any of the fields in the ALST/ALLS section.  Rather, the scripts are store in the [[Tes5Mod:Mod File Format/VMAD Field|VMAD]] field for the overall QUST record, which contains a [[Tes5Mod:Mod File Format/VMAD Field#Alias Scripts Section|section]] listing all scripts attached to the quest aliases.

{| class="wikitable" width="100%" 
! width="3%" | [[Tes5Mod:File Format Conventions|C]]
! width="10%" | SubRecord
! width="15%" | Name
! width="12%" | [[Tes5Mod:File Format Conventions|Type/Size]]
! | Info
|-
| * || ALST || AliasID (Reference) || int32
|rowspan=2|The AliasID is the numerical value used for this alias.  This is the parameter for functions such as <code>LocAliasHasKeyword</code> and <code>GetInCurrentLocAlias</code>.

ALST fields are used for Reference aliases (in the CK, "Ref" is listed in the Type column), whereas ALLS fields are used for Location aliases ("Loc" is listed in the CK's Type column).  In the CK, different editor screens are used for the two alias types, thereby controlling which fields can be associated with each type of alias.
|-
| * || ALLS || AliasID (Location) || int32
|-
| * ||
: ALID
| AliasName || zstring || The name of this Alias, for example <code>Location</code> or <code>QuestGiver</code>.  This name appears in strings that are dynamically updated based upon the quest details, for example ''Kill the leader of <Alias=Location>''.  The calculated value of this alias is then substituted into the string.
|- {{ThickLine}}
|colspan=5|The following fields determine the alias' "Fill Type" (to use the CK terminology), i.e., they assign the alias' value.  Only one of the following fields can appear in a given alias (although multiple CTDA fields can be used together).  Nearly all aliases contain one of the fields, although there are some exceptions (the exceptions are identified as "Forced: NONE" in the CK Fill Type column; it is not clear how these aliases are filled).
|-
| - ||
:: ALUA
| Alias Unique Actor || formid || (ALST only) [[Tes5Mod:Mod File Format/NPC_|NPC_]] record for an NPC assigned to this alias; uses an existing instance (ACHR record) of the NPC instead of creating a new one.  Presumably only works for NPCs with a unique ACHR.

Specified using "Unique Actor" section of CK editor; displayed as "UniqueActor" in Fill Type column.

This field is frequently used to identify the quest-giver, but it can also be used to assign an alias for any other NPC with a unique role in the quest.
|-
| - ||
:: ALCO
| Alias Created Object || formid || (ALST only) Points to a base record for an item (NPC_, BOOK, MISC, LVLI, ARMO, KEYM, etc).  An instance of that object is then created and assigned to this alias. 

Specified using "Create Reference to Object" section of CK editor; displayed as "Created" in Fill Type column.

|-
| ? ||
:: ALEQ
| External Alias Reference || formid || (ALLS or ALST) [[Tes5Mod:Mod File Format/QUST|QUST]] records.  Provides the quest where the alias should be copied from; ALEA provides the AliasID in that quest that should be used.

Specified using "External Alias Reference" section of CK editor; display as "Match" in Fill Type Column.
|-
| - ||
::ALFE
| From Event|| char[4] || (ALLS or ALST) Provides the type of event (e.g. "Script").  Corresponds with [[Tes5Mod:Mod File Format/SMEN|SMEN]] short name.  ALFD field provides extra data about the event.

Specified using "Find Matching Location/Reference" section of CK editor and "From Event" checkbox; displayed as "Event" in Fill Type column.
|-
| - ||
:: ALFL
| Alias Forced Location || formid || (ALLS only) A fixed [[Tes5Mod:Mod File Format/LCTN|LCTN]] record that should be assigned to this alias.  Also presumably becomes the default location record for this quest (used by any other alias records that need to look up location-specific items).

Specified using "Specific Location" section of CK editor; displayed as "Forced" in Fill Type column (even if "Force into Alias when Filled" is not selected).
|-
| - ||
:: ALFR
| Alias Forced Reference || formid || (ALST only) Points to an ACHR or REFR record corresponding to the object that should be assigned to this alias.  

Specified using "Specific Reference" section of CK editor; displayed as "Forced" in Fill Type column.
|-
| - ||
:: ALRT
| Alias Reference Type || formid || (ALST only) Points to a [[Tes5Mod:Mod File Format/LCRT|LCRT]] record which is used to find the object that should be assigned to this alias.  This LCRT is looked up in the [[Tes5Mod:Mod File Format/LCTN|LCTN]].LCSR field of the quest's assigned location to find a ACHR or REFR record that is then associated with this alias.

Specified using "Location Alias Reference" section of CK editor; displayed as "<Location>'s &lt;Ref Type&gt;" in Fill Type column.
|-
| * ||
:: [[Tes5Mod:Mod File Format/CTDA Field|CTDA]]
| Match Conditions || struct[32] || (ALLS or ALST) Conditions used to Find Matching Reference/Location.  There does not appear to be any other field/flag that indicates that conditions are being used for this alias -- just a list of one or more CTDA fields.

Specified using "Find Matching Reference/Location" section of CK editor and filling in "Match Conditions"; displayed as "Condition" in Fill Type column.
|-
| * ||
::: CIS2
| Variable name? || zstring || Auxiliary data for CTDA.

|- {{ThickLine}}
|colspan=5| The following fields are used to provide additional information related to the alias' Fill Type.  Each field only appears in association with a given Fill Type field
|-
| - ||
:: ALCA
| Unknown || int32 || Associated with ALCO
|-
| - ||
:: ALCL
| Unknown || int32 || Associated with ALCO
|-
| ? ||
:: ALEA
| Unknown || int32 || Associated with ALEQ.  Presumably is AliasID to be used in specified external quest.
|-
| - ||
:: ALFA
| Unknown || int32 || Associated with ALRT.  May be a formid, but with first byte(s) co-opted as a flag?
|-
| - ||
::ALFD
| Event Data || int32 || Used in association with ALFE field, and presumably is related to information displayed in "Event Data" dropdown box in CK.  However, exact meaning of number stored in field is unknown.
|- {{ThickLine}}
| + ||
:: FNAM
| Flags || int32 || Appears in both ALST and ALLS sections, however, most of the individual flag options are only used in ALST sections.  Cases where the flag can be used in ALLS sections are noted below.

In some cases (e.g., essential, protected), the flags are options assigned to the quest target for the duration of the quest.  In other cases, the flags control how the alias is used during the quest.  Known flag options:
:0x01 - Reserves Location (in ALLS) or Reserves Reference (in ALST)
:0x02 - Optional (ALLS or ALST)
:0x04 - Quest Object
:0x08 - Allow Reuse in Quest (ALLS or ALST)
:0x10 - Allow Dead
:0x20 - In Loaded Area (flag within the "Find Matching Reference" section, presumably limiting match to items in the loaded area)
:0x40 - Essential (makes the alias target essential for the duration of the quest)
:0x80 - Allow Disabled
:0x100 - Stores Text (ALLS or ALST)
:0x200 - Allow Reserved (ALLS or ALST)
:0x400 - Protected
:0x800 - ''Unknown''
:0x1000 - Allow Destroyed
:0x2000 - Closest (flag within the "Find Matching Reference" section; only allowed if "In Loaded Area" selected.  Presumably limiting match to closest item in the loaded area)
:0x4000 - Uses Stored Text
:0x8000 - Initially Disabled
:0x10000 - Allow Cleared (ALLS only)
|-
| + ||
:: ALED
| EOF Marker? || empty || Appears to always be the final field in a set of ALID entries.
|-
| - ||
:: VTCK
| Voice Type|| formid || "Additional Valid Voice Types for Export".  When non-zero points to [[Tes5Mod:Mod File Format/NPC_|NPC_]] or [[Tes5Mod:Mod File Format/FLST|FLST]] records
|-
| - ||
:: ALDN
| Display Name || formid || Points to [[Tes5Mod:Mod File Format/MESG|MESG]] record, whose value is then dynamically assigned as the displayed name of the Alias object.  Used to rename NPCs (e.g., [[Skyrim:Rigel Strong-Arm]]), quest rewards (e.g., Blade of Falkreath), or quest targets (e.g., Fine-Cut Void Salts)
|-
| ? ||
:: ALFC
| Alias Factions || formid || [[Tes5Mod:Mod File Format/FACT|FACT]] records.  Factions added to the alias target for the duration of the quest.
|-
| ? ||
:: ALFI
| Unknown || int32 || Unknown
|-
| * ||
:: ALPC
| Alias Package Data || formid || [[Tes5Mod:Mod File Format/PACK|PACK]] records.  Packages added to the alias target for the duration of the quest.
|-
| * ||
:: ALSP
| Alias Spells || formid || [[Tes5Mod:Mod File Format/SPEL|SPEL]] records.  Spells added to the alias target for the duration of the quest.
|-
| - ||
:: COCT
| CNTO count || int32 || Number of CNTO records.  Does not appear if there are no CNTO records.
|-
|rowspan=3| *
|rowspan=3|
:: CNTO
| Items || struct[8] || Inventory-type item list.  These items are added to the inventory of the aliased object for the duration of the quest.
|-
|
:Item ID
| formid ||
|-
|
:Item count
| uint32 ||
|-
| - ||
:: ECOR
| Combat Override || formid || Combat Override Package List.  [[Tes5Mod:Mod File Format/FLST|FLST]] records
|-
| ? ||
:: KNAM
| Unknown || formid || A single [[Tes5Mod:Mod File Format/KYWD|KYWD]] record
|-
| - ||
:: KSIZ
| KWDA count || uint32 || Number of KWDA entries (size of KWDA is 4*KSIZ)
|-
| - ||
:: KWDA
| Alias Keywords || formid[KSIZ] || [[Tes5Mod:Mod File Format/KYWD|KYWD]] records.  Keywords added to the alias for the duration of the quest.
|-
| ? ||
:: NAM0
| Unknown || int32 || Unknown
|-
| ? ||
:: QTGL
| Unknown || int32 || Unknown
|}
